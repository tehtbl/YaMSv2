---
version: "3"
services:
  redis:
    image: redis:4.0.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - ./data/redisdata:/data

  db:
    build:
      context: .
      dockerfile: docker/db/Dockerfile
    ports:
      - "5432:5432"
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data/
    depends_on:
      - redis
    links:
      - redis
    environment:
      POSTGRES_USER: 'pguser'
      POSTGRES_PASSWORD: 'supersecret'
      POSTGRES_DB: 'yamsdb'

  app_tracker:
    build:
      context: .
      dockerfile: docker/app_tracker/Dockerfile
#    command: "/bin/bash /tracker/start.sh"
    command: "/usr/local/bin/python /tracker/main.py"
    depends_on:
      - db
      - redis
    links:
      - db
      - redis

  app_recv_btrx:
    build:
      context: .
      dockerfile: docker/app_recv_btrx/Dockerfile
    command: "/bin/bash /recv_btrx/start.sh"
    depends_on:
      - redis
    links:
      - redis

  app_analyze:
    build:
      context: .
      dockerfile: docker/app_analyze/Dockerfile
    command: "/bin/bash /analyzer/start.sh"
    depends_on:
      - redis
      - app_tracker
    links:
      - redis

#    depends_on:
#      - elasticsearch
#      - kibana
#    links:
#      - elasticsearch
#      - db


#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.0
#    volumes:
#      - ./docker/config-es/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
#      - ./data/es:/usr/share/elasticsearch/data
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    restart: always
#    environment:
#      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:5.5.0
#    volumes:
#      - ./docker/config-ki/:/usr/share/kibana/config
#    ports:
#      - "5601:5601"
#    links:
#      - elasticsearch
#    restart: always

#  influxdb:
#    image: influxdb:1.0.2
#    ports:
#      - "8083:8083"
#      - "8086:8086"
#      - "25826:25826/udp"
#    volumes:
#      - /var/lib/influxdb:/var/lib/influxdb
#      - /usr/share/collectd:/usr/share/collectd
#    environment:
#      INFLUXDB_COLLECTD_ENABLED: "true"
#      INFLUXDB_COLLECTD_BIND_ADDRESS: ":25826"
#      INFLUXDB_COLLECTD_DATABASE: "collectddb"
#      INFLUXDB_COLLECTD_TYPESDB: "/usr/share/collectd/types.db"
#      INFLUXDB_COLLECTD_BATCH_SIZE: 5000
#      INFLUXDB_COLLECTD_BATCH_PENDING: 10
#      INFLUXDB_COLLECTD_BATCH_TIMEOUT: "10s"
#      INFLUXDB_COLLECTD_READ_BUFFER: 0
#
#  grafana:
#    image: grafana/grafana:3.1.1-1470047149
#    ports:
#      - 3000:3000
#    volumes:
#      - /var/lib/grafana:/var/lib/grafana
#    environment:
#      GF_USERS_ALLOW_SIGN_UP: "false"

#   grafana:
#    image: grafana/grafana:2.6.0
#    restart: always
#    links:
#      - influxdb:influxsrv
#    ports:
#      - "3000:3000"
#    environment:
#      - HTTP_USER=admin
#      - HTTP_PASS=admin
#      - INFLUXDB_HOST=influxsrv
#      - INFLUXDB_PORT=8086
#      - INFLUXDB_NAME=cadvisor
#      - INFLUXDB_USER=root
#      - INFLUXDB_PASS=root
#
#  influxdb:
#    image: tutum/influxdb:0.9
#    restart: always
#    environment:
#      - PRE_CREATE_DB=cadvisor
#    ports:
#      - "8083:8083"
#      - "8086:8086"
#    expose:
#      - "8090"
#      - "8099"